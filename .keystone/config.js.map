{
  "version": 3,
  "sources": ["../keystone.ts", "../schema.ts", "../auth.ts"],
  "sourcesContent": ["import \"dotenv/config\"\nimport { config } from \"@keystone-6/core\"\n\nimport { lists } from \"./schema\"\nimport { withAuth, session } from \"./auth\"\n\nexport default withAuth(\n\tconfig({\n\t\tdb: {\n\t\t\tprovider: \"postgresql\",\n\t\t\turl: process.env.DATABASE_URL || \"\",\n\t\t},\n\t\tlists,\n\t\tsession,\n\t\tui: {\n\t\t\tisAccessAllowed: ({ session }) => {\n\t\t\t\treturn !!session?.data\n\t\t\t},\n\t\t},\n\t})\n)\n", "import { list } from \"@keystone-6/core\"\nimport { allowAll } from \"@keystone-6/core/access\"\nimport { text, password, timestamp } from \"@keystone-6/core/fields\"\n\nimport type { Lists } from \".keystone/types\"\n\nexport const lists: Lists = {\n\tUser: list({\n\t\taccess: allowAll,\n\t\tfields: {\n\t\t\tname: text({ validation: { isRequired: true } }),\n\n\t\t\temail: text({\n\t\t\t\tvalidation: { isRequired: true },\n\t\t\t\tisIndexed: \"unique\",\n\t\t\t}),\n\n\t\t\tpassword: password({ validation: { isRequired: true } }),\n\n\t\t\tcreatedAt: timestamp({\n\t\t\t\tdefaultValue: { kind: \"now\" },\n\t\t\t}),\n\t\t},\n\t}),\n}\n", "import { randomBytes } from \"crypto\"\nimport { createAuth } from \"@keystone-6/auth\"\nimport { statelessSessions } from \"@keystone-6/core/session\"\n\nlet sessionSecret = process.env.SESSION_SECRET\nif (!sessionSecret && process.env.NODE_ENV !== \"production\") {\n\tsessionSecret = randomBytes(32).toString(\"hex\")\n}\n\nconst { withAuth } = createAuth({\n\tlistKey: \"User\",\n\tidentityField: \"email\",\n\tsessionData: \"id name email createdAt\",\n\tsecretField: \"password\",\n\n\tinitFirstItem: {\n\t\tfields: [\"name\", \"email\", \"password\"],\n\t},\n})\n\nconst sessionMaxAge = 60 * 60 * 24 * 30\n\nconst session = statelessSessions({\n\tmaxAge: sessionMaxAge,\n\tsecret: sessionSecret!,\n})\n\nexport { withAuth, session }\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAO;AACP,IAAAA,eAAuB;;;ACDvB,kBAAqB;AACrB,oBAAyB;AACzB,oBAA0C;AAInC,IAAM,QAAe;AAAA,EAC3B,UAAM,kBAAK;AAAA,IACV,QAAQ;AAAA,IACR,QAAQ;AAAA,MACP,UAAM,oBAAK,EAAE,YAAY,EAAE,YAAY,KAAK,EAAE,CAAC;AAAA,MAE/C,WAAO,oBAAK;AAAA,QACX,YAAY,EAAE,YAAY,KAAK;AAAA,QAC/B,WAAW;AAAA,MACZ,CAAC;AAAA,MAED,cAAU,wBAAS,EAAE,YAAY,EAAE,YAAY,KAAK,EAAE,CAAC;AAAA,MAEvD,eAAW,yBAAU;AAAA,QACpB,cAAc,EAAE,MAAM,MAAM;AAAA,MAC7B,CAAC;AAAA,IACF;AAAA,EACD,CAAC;AACF;;;ACxBA,oBAA4B;AAC5B,kBAA2B;AAC3B,qBAAkC;AAElC,IAAI,gBAAgB,QAAQ,IAAI;AAChC,IAAI,CAAC,iBAAiB,QAAQ,IAAI,aAAa,cAAc;AAC5D,sBAAgB,2BAAY,EAAE,EAAE,SAAS,KAAK;AAC/C;AAEA,IAAM,EAAE,SAAS,QAAI,wBAAW;AAAA,EAC/B,SAAS;AAAA,EACT,eAAe;AAAA,EACf,aAAa;AAAA,EACb,aAAa;AAAA,EAEb,eAAe;AAAA,IACd,QAAQ,CAAC,QAAQ,SAAS,UAAU;AAAA,EACrC;AACD,CAAC;AAED,IAAM,gBAAgB,KAAK,KAAK,KAAK;AAErC,IAAM,cAAU,kCAAkB;AAAA,EACjC,QAAQ;AAAA,EACR,QAAQ;AACT,CAAC;;;AFnBD,IAAO,mBAAQ;AAAA,MACd,qBAAO;AAAA,IACN,IAAI;AAAA,MACH,UAAU;AAAA,MACV,KAAK,QAAQ,IAAI,gBAAgB;AAAA,IAClC;AAAA,IACA;AAAA,IACA;AAAA,IACA,IAAI;AAAA,MACH,iBAAiB,CAAC,EAAE,SAAAC,SAAQ,MAAM;AACjC,eAAO,CAAC,CAACA,UAAS;AAAA,MACnB;AAAA,IACD;AAAA,EACD,CAAC;AACF;",
  "names": ["import_core", "session"]
}
